$PBExportHeader$m_edit_properties.srm
forward
global type m_edit_properties from m_edit
end type
type m_undo from menu within m_edititem
end type
type m_edititem from m_edit`m_edititem within m_edit_properties
m_undo m_undo
end type
end forward

global type m_edit_properties from m_edit
end type
global m_edit_properties m_edit_properties

on m_edit_properties.create
m_edit_properties=this
call super::create
this.text = "m_edit_properties"
end on

on m_edit_properties.destroy
call super::destroy
end on

type m_edititem from m_edit`m_edititem within m_edit_properties
m_undo m_undo
end type

on m_edititem.create
call super::create
this.m_undo=create m_undo
this.Item[UpperBound(this.Item)+1]=this.m_undo
end on

on m_edititem.destroy
call super::destroy
destroy(this.m_undo)
end on

type m_cut from m_edit`m_cut within m_edititem
end type

on m_cut.create
call super::create
this.visible = false
end on

on m_cut.destroy
call super::destroy
end on

type m_copy from m_edit`m_copy within m_edititem
end type

on m_copy.create
call super::create
end on

on m_copy.destroy
call super::destroy
end on

type m_paste from m_edit`m_paste within m_edititem
end type

on m_paste.create
call super::create
end on

on m_paste.destroy
call super::destroy
end on

type m_selectall from m_edit`m_selectall within m_edititem
end type

on m_selectall.create
call super::create
this.visible = false
end on

on m_selectall.destroy
call super::destroy
end on

type m_undo from menu within m_edititem
end type

event clicked;//this menu is only used on w_dwproperties
If isValid(w_dwProperties) THEN
	w_dwproperties.Event ue_undo()
END IF

end event

on m_undo.create
call super::create
this.text = "U&ndo"
this.enabled = false
end on

on m_undo.destroy
call super::destroy
end on

